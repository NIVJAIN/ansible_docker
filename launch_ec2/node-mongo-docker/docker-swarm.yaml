#  this file is for docker swarm
# docker stack deploy --compose-file docker-swarm.yaml stackdemo
# docker stack services stackdemo
# docker service ls
#     ID             NAME                MODE         REPLICAS   IMAGE                              PORTS
#     nv2ua60h3hqw   stackdemo_app       replicated   1/1        127.0.0.1:3000/node-mongo:latest   *:3000->3000/tcp
#     twz7t7fz80os   stackdemo_mongodb   replicated   1/1        mongo:latest                       *:27017->27017/tcp
# docker service logs -f stackdemo_app
#  docker stack rm stackdemo
#  docker service rm registry
#  docker swarm leave --force
version: "3.7"
services:
  app:
    container_name: node-mongo
    image: 127.0.0.1:3000/node-mongo
    restart: always
    build: .
    ports:
      - "3000:3000"
    environment:
        MONGO_CONTAINER_NAME: "mongodb" #for dockerswarm use mongodb and it will work for docker-compose
        MONGO_INITDB_ROOT_USERNAME: "jain"
        MONGO_INITDB_ROOT_PASSWORD: "pAssw0rd"
        MONGO_INITDB_DATABASE : "pod"
    links:
      - mongodb
    depends_on:
      - mongodb
    networks:
      - node-demo
# ########################### # ##########################
#                         SERVICES                       #
# ########################## # ##########################
  service-a:
    image: nivjain/node-srv-a:1.4.0
    networks:
      - node-demo
    ports:
      - 5000:3000
  service-b:
    image: nivjain/node-srv-b:1.4.0
    networks:
      - node-demo
    ports:
      - 6000:3000
  service-c:
    image: nivjain/node-srv-c:1.4.0
    networks:
      - node-demo
    ports:
      - 7000:3000

# ########################### # ##########################
#                         DATABASE                      #
# ########################## # ##########################
  mongodb:
    image: mongo:latest
    container_name: mongojain
    restart: always
    environment:
        MONGO_CONTAINER_NAME: "mongojain"
        MONGO_INITDB_ROOT_USERNAME: "jain"
        MONGO_INITDB_ROOT_PASSWORD: "pAssw0rd" 
    ports:
        - 27017:27017
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ./data:/data/db
    networks:
      - node-demo

    
networks:
  node-demo:
    external: true

